import { ReactElement, useEffect, useState } from "react";


type Icons = 'paw' | 'config';

interface IconProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
    icon: Icons
}

const Icon: React.FC<IconProps> = ({ icon, ...props }) => {
    const [componentToRender, setComponentToRender] = useState<ReactElement>();

    useEffect(() => {
        switch (icon) {
            case 'paw': setComponentToRender(<svg xmlns="http://www.w3.org/2000/svg" width="22" height="19" viewBox="0 0 22 19" fill="none">
                <path d="M10.6078 7.95594C7.31744 7.95594 2.6522 13.0426 2.6522 16.2534C2.6522 17.6995 3.76309 18.5635 5.62479 18.5635C7.64851 18.5635 8.98481 17.5243 10.6078 17.5243C12.245 17.5243 13.585 18.5635 15.5909 18.5635C17.4526 18.5635 18.5635 17.6995 18.5635 16.2534C18.5635 13.0426 13.8983 7.95594 10.6078 7.95594ZM4.5052 7.43344C4.07427 5.99769 2.74667 5.06787 1.54007 5.35627C0.333461 5.64466 -0.295118 7.04228 0.135813 8.47803C0.566743 9.91378 1.89434 10.8436 3.10095 10.5552C4.30756 10.2668 4.93613 8.86918 4.5052 7.43344ZM8.01563 6.5724C9.29765 6.23512 9.93908 4.50311 9.44848 2.70397C8.95788 0.904833 7.52089 -0.279813 6.23887 0.0574733C4.95685 0.39476 4.31543 2.12677 4.80603 3.92591C5.29662 5.72504 6.73403 6.9101 8.01563 6.5724ZM19.6752 5.35668C18.4686 5.06829 17.1414 5.9981 16.7101 7.43385C16.2791 8.8696 16.9077 10.2672 18.1143 10.5556C19.3209 10.844 20.6481 9.91419 21.0795 8.47844C21.5104 7.0427 20.8818 5.64507 19.6752 5.35668ZM13.2001 6.5724C14.4821 6.90969 15.9191 5.72504 16.4097 3.92591C16.9003 2.12677 16.2588 0.395174 14.9768 0.0574733C13.6948 -0.280227 12.2578 0.904833 11.7672 2.70397C11.2766 4.50311 11.918 6.23512 13.2001 6.5724Z" fill="black" />
            </svg>);
                break;
            case 'config': setComponentToRender(<svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 22 22" fill="none">
                <path d="M20.7915 13.6435L18.902 12.5524C19.0927 11.5234 19.0927 10.4677 18.902 9.43871L20.7915 8.34759C21.0089 8.2234 21.1064 7.96614 21.0355 7.72663C20.5431 6.1476 19.7048 4.71938 18.6093 3.53067C18.4407 3.34882 18.1657 3.30446 17.9528 3.42866L16.0633 4.51978C15.2694 3.83672 14.3557 3.3089 13.3666 2.96293V0.785119C13.3666 0.536733 13.1936 0.319395 12.9496 0.26617C11.3218 -0.0975387 9.65407 -0.0797969 8.10609 0.26617C7.86214 0.319395 7.68915 0.536733 7.68915 0.785119V2.96737C6.70448 3.31777 5.79077 3.84559 4.99239 4.52422L3.10732 3.43309C2.88998 3.3089 2.61941 3.34882 2.45087 3.53511C1.35531 4.71938 0.517003 6.1476 0.0246665 7.73106C-0.0507364 7.97058 0.0512793 8.22783 0.268617 8.35203L2.15813 9.44315C1.9674 10.4722 1.9674 11.5278 2.15813 12.5568L0.268617 13.648C0.0512793 13.7722 -0.046301 14.0294 0.0246665 14.2689C0.517003 15.848 1.35531 17.2762 2.45087 18.4649C2.61941 18.6467 2.89441 18.6911 3.10732 18.5669L4.99683 17.4758C5.79077 18.1588 6.70448 18.6867 7.69359 19.0326V21.2149C7.69359 21.4633 7.86657 21.6806 8.11052 21.7338C9.73834 22.0975 11.4061 22.0798 12.9541 21.7338C13.198 21.6806 13.371 21.4633 13.371 21.2149V19.0326C14.3557 18.6822 15.2694 18.1544 16.0677 17.4758L17.9573 18.5669C18.1746 18.6911 18.4452 18.6512 18.6137 18.4649C19.7093 17.2806 20.5476 15.8524 21.0399 14.2689C21.1064 14.025 21.0089 13.7677 20.7915 13.6435ZM10.5279 14.5439C8.57181 14.5439 6.97948 12.9516 6.97948 10.9956C6.97948 9.03952 8.57181 7.44719 10.5279 7.44719C12.4839 7.44719 14.0762 9.03952 14.0762 10.9956C14.0762 12.9516 12.4839 14.5439 10.5279 14.5439Z" fill="black" />
            </svg>);
                break
        }
    }, []);
    return (<button style={{
        appearance: 'none',
        backgroundColor: 'transparent',
        border: 'none',
        margin: '0',
        padding: '0',
        cursor: icon === 'config' ? 'pointer' : 'default'
    }} {...props}>
        {componentToRender}
    </button>)
}

export default Icon;
